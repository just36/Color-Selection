{"version":3,"sources":["src/main.js"],"names":["cols","document","querySelectorAll","gerenerateRandomColor","color","i","Math","floor","random","length","copyToClickboard","text","navigator","clipboard","writeText","setRandomColors","isInitial","colors","getColorsFromHash","forEach","col","index","isLocked","querySelector","classList","contains","button","push","textContent","chroma","style","background","setTextColor","updateColorsHash","luminance","location","hash","map","toString","substring","join","split","addEventListener","event","preventDefault","code","toLowerCase","type","target","dataset","node","tagName","children","toggle"],"mappings":";AAAA,IAAMA,EAAOC,SAASC,iBAAiB,QAyBvC,SAASC,IAQP,IAFA,IACIC,EAAQ,GACHC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAHe,mBAGGE,KAAKC,MAAMD,KAAKE,SAHnB,mBAGuCC,SAExD,MAAO,IAAML,EAGf,SAASM,EAAiBC,GACxB,OAAOC,UAAUC,UAAUC,UAAUH,GAGvC,SAASI,EAAgBC,GACvB,IAAMC,EAASD,EAAYE,IAAsB,GAEjDlB,EAAKmB,QAAQ,SAACC,EAAKC,GACjB,IAAMC,EAAWF,EAAIG,cAAc,KAAKC,UAAUC,SAAS,WACrDd,EAAOS,EAAIG,cAAc,MACzBG,EAASN,EAAIG,cAAc,UAEjC,GAAID,EACFL,EAAOU,KAAKhB,EAAKiB,iBADnB,CAKA,IAAMxB,EAAQY,GACVC,EAAOI,GACLJ,EAAOI,GAETQ,OAAOrB,SAENQ,GACHC,EAAOU,KAAKvB,GAGdO,EAAKiB,YAAcxB,EACnBgB,EAAIU,MAAMC,WAAa3B,EAEvB4B,EAAarB,EAAMP,GACnB4B,EAAaN,EAAQtB,MAGvB6B,EAAiBhB,GAGnB,SAASe,EAAarB,EAAMP,GAC1B,IAAM8B,EAAYL,OAAOzB,GAAO8B,YAChCvB,EAAKmB,MAAM1B,MAAQ8B,EAAY,GAAM,QAAU,QAGjD,SAASD,IAA8B,IAAbhB,EAAS,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GACjChB,SAASkC,SAASC,KAAOnB,EACtBoB,IAAI,SAACjB,GACJ,OAAOA,EAAIkB,WAAWC,UAAU,KAEjCC,KAAK,KAGV,SAAStB,IACP,OAAIjB,SAASkC,SAASC,KAAK3B,OAAS,EAC3BR,SAASkC,SAASC,KACtBG,UAAU,GACVE,MAAM,KACNJ,IAAI,SAACjC,GAAK,MAAK,IAAMA,IAEnB,GA9FTH,SAASyC,iBAAiB,UAAW,SAACC,GACpCA,EAAMC,iBAC2B,UAA7BD,EAAME,KAAKC,eACb/B,MAIJd,SAASyC,iBAAiB,QAAS,SAACC,GAClC,IAAMI,EAAOJ,EAAMK,OAAOC,QAAQF,KAElC,GAAa,SAATA,EAAiB,CACnB,IAAMG,EACmC,MAAvCP,EAAMK,OAAOG,QAAQL,cACjBH,EAAMK,OACNL,EAAMK,OAAOI,SAAS,GAE5BF,EAAK1B,UAAU6B,OAAO,gBACtBH,EAAK1B,UAAU6B,OAAO,eACJ,SAATN,GACTrC,EAAiBiC,EAAMK,OAAOpB,eA8ElCb,GAAgB","file":"main.c5aae117.js","sourceRoot":"..","sourcesContent":["const cols = document.querySelectorAll('.col');\r\n\r\ndocument.addEventListener('keydown', (event) => {\r\n  event.preventDefault();\r\n  if (event.code.toLowerCase() === 'space') {\r\n    setRandomColors();\r\n  }\r\n});\r\n\r\ndocument.addEventListener('click', (event) => {\r\n  const type = event.target.dataset.type;\r\n\r\n  if (type === 'lock') {\r\n    const node =\r\n      event.target.tagName.toLowerCase() === 'i'\r\n        ? event.target\r\n        : event.target.children[0];\r\n\r\n    node.classList.toggle('fa-lock-open');\r\n    node.classList.toggle('fa-lock');\r\n  } else if (type === 'copy') {\r\n    copyToClickboard(event.target.textContent);\r\n  }\r\n});\r\n\r\nfunction gerenerateRandomColor() {\r\n  // RGB\r\n  // #FF0000\r\n  // #00FF00\r\n  // #0000FF\r\n\r\n  const hexCodes = '0123456789ABCDEF';\r\n  let color = '';\r\n  for (let i = 0; i < 6; i++) {\r\n    color += hexCodes[Math.floor(Math.random() * hexCodes.length)];\r\n  }\r\n  return '#' + color;\r\n}\r\n\r\nfunction copyToClickboard(text) {\r\n  return navigator.clipboard.writeText(text);\r\n}\r\n\r\nfunction setRandomColors(isInitial) {\r\n  const colors = isInitial ? getColorsFromHash() : [];\r\n\r\n  cols.forEach((col, index) => {\r\n    const isLocked = col.querySelector('i').classList.contains('fa-lock');\r\n    const text = col.querySelector('h2');\r\n    const button = col.querySelector('button');\r\n\r\n    if (isLocked) {\r\n      colors.push(text.textContent);\r\n      return;\r\n    }\r\n\r\n    const color = isInitial\r\n      ? colors[index]\r\n        ? colors[index]\r\n        : chroma.random()\r\n      : chroma.random();\r\n\r\n    if (!isInitial) {\r\n      colors.push(color);\r\n    }\r\n\r\n    text.textContent = color;\r\n    col.style.background = color;\r\n\r\n    setTextColor(text, color);\r\n    setTextColor(button, color);\r\n  });\r\n\r\n  updateColorsHash(colors);\r\n}\r\n\r\nfunction setTextColor(text, color) {\r\n  const luminance = chroma(color).luminance();\r\n  text.style.color = luminance > 0.5 ? 'black' : 'white';\r\n}\r\n\r\nfunction updateColorsHash(colors = []) {\r\n  document.location.hash = colors\r\n    .map((col) => {\r\n      return col.toString().substring(1);\r\n    })\r\n    .join('-');\r\n}\r\n\r\nfunction getColorsFromHash() {\r\n  if (document.location.hash.length > 1) {\r\n    return document.location.hash\r\n      .substring(1)\r\n      .split('-')\r\n      .map((color) => '#' + color);\r\n  }\r\n  return [];\r\n}\r\n\r\nsetRandomColors(true);\r\n"]}